---
import "src/styles/global.css";

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description, image = "/images/ogimage.png" } = Astro.props;
---

<!-- Critical inline theme script -->
<script is:inline>
  const theme = (() => {
    try {
      if (localStorage.getItem('theme')) return localStorage.getItem('theme');
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) return 'dark';
    } catch {}
    return 'light';
  })();
  document.documentElement.classList.toggle('dark', theme === 'dark');
</script>

<!-- Font preload (async + non-blocking) -->
<link
  rel="preload"
  href="https://fonts.googleapis.com/css2?family=Crimson+Text:wght@400;600;700&family=Jost:wght@300;400;500;600;700&display=swap"
  as="style"
  onload="this.setAttribute('rel','stylesheet')"
/>
<noscript>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Crimson+Text:wght@400;600;700&family=Jost:wght@300;400;500;600;700&display=swap" />
</noscript>

<!-- Basic SEO -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="robots" content="index, follow" />
<meta name="generator" content={Astro.generator} />
<link rel="canonical" href={canonicalURL} />

<!-- Favicons -->
<link rel="icon" href="/favicon-32x32.png" sizes="32x32" />
<link rel="icon" href="/favicon-16x16.png" sizes="16x16" />
<link rel="manifest" href="/manifest.json" />
<meta name="theme-color" content="#F9F9F5" />

<!-- Page Metadata -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph -->
<meta property="og:type" content="website" />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:url" content={Astro.url} />

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image, Astro.url)} />
<meta name="twitter:url" content={Astro.url} />

<!-- Schema.org Structured Data for Personal Branding -->
<script type="application/ld+json" is:inline>
{
  "@context": "https://schema.org",
  "@type": "Person",
  "name": "Rabia Ahmed",
  "url": "https://rabiaahmed.me",
  "jobTitle": "Product Marketer",
  "description": "Product marketer specializing in GTM and growth for AI, devtools, and Web3 products.",
  "sameAs": [
    "https://linkedin.com/in/rabiaahmed-marketing",
    "https://github.com/rabiaa"
  ]
}
</script>

<!-- Sitemap + RSS -->
<link rel="sitemap" href="/sitemap-index.xml" />
<link rel="alternate" type="application/rss+xml" title={`${title} RSS Feed`} href="/rss.xml" />

<!-- PostHog Analytics (production only) -->
{import.meta.env.PROD && (
  <script is:inline>
    !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){
    function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),
    t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",
    p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",
    (r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;
    for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){
    var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},
    u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init capture identify alias people.set".split(" "),
    n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}
    (document,window.posthog||[]);
    posthog.init('phc_wO6Bjo5R2PNpRtGQ1igMfFutJtPUAahHTmyYUt8jjea', {
      api_host: 'https://us.i.posthog.com',
      person_profiles: 'identified_only'
    });
  </script>
)}
