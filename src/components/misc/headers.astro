---
import ThemeSwitcher from './theme-switcher.astro';
import Container from '@components/misc/container.astro';
import Frame from '@components/misc/frame.astro';

const links = [
    { to: "/", label: "rabia" },
    { to: "/writings", label: "writings" },
    { to: "/resources", label: "resources" },
    { to: "/#testimonials", label: "testimonials" },
];
---

<header>
    <nav class="absolute w-full lg:bg-transparent dark:lg:bg-transparent">
        <Container>
            <div class="relative flex flex-wrap items-center justify-between gap-6 py-3 md:gap-0 md:py-4 lg:py-8">
                <div class="relative z-30 flex w-full items-center justify-between md:px-0 lg:w-max lg:flex-shrink-0">
                
					<a href="/" class="z-50 relative">
                        <img src="/apple-icon.png" alt="Rabia Ahmed" class="h-14 object-cover ">
                    </a>                    
                    <div class="relative flex max-h-10 items-center lg:hidden z-30">
                        <button
                            id="menu-btn"
                            aria-label="menu button"
                            class="relative -mr-6 p-6"
                        >
                            <div id="line1" class="m-auto h-0.5 w-5 rounded bg-sky-900 transition duration-300 dark:bg-gray-300"></div>
                            <div id="line2" class="m-auto mt-2 h-0.5 w-5 rounded bg-sky-900 transition duration-300 dark:bg-gray-300"></div>
                        </button>
                    </div>
                </div>

                <!-- Desktop Navigation (hidden on mobile) -->
                <div class="hidden lg:flex lg:fixed lg:inset-x-0 lg:justify-center z-20">
                    <Frame>
                        <div class="relative w-full text-gray-600 dark:text-gray-300">
                            <ul class="flex flex-row gap-6 tracking-wide text-sm">
                                {links.map((link) => (
                                    <li>
                                        <a
                                            href={link.to}
                                            class="px-2 py-1 hover:bg-gray-950/5 hover:text-gray-950
                                                   rounded-md transition dark:hover:text-white
                                                   md:px-4 dark:hover:bg-white/5"
                                        >
                                            <span>{link.label}</span>
                                        </a>
                                    </li>
                                ))}
                            </ul>
                        </div>
                    </Frame>
                </div>

                <!-- Background Overlay behind the menu: z-10 -->
                <div
                    id="navLayer"
                    class="fixed inset-0 z-10 h-screen w-screen scale-y-0 bg-white/70 backdrop-blur-2xl transition duration-500 dark:bg-gray-900/70 lg:hidden"
                ></div>

                <!-- Mobile Nav container: z-20, so it's above overlay -->
                <div
                    id="navlinks"
                    class="hidden z-20 flex-wrap lg:hidden gap-6 items-center w-full
                           bg-white dark:bg-gray-900 p-6 shadow-lg rounded-md
                           absolute top-16 left-1/2 transform -translate-x-1/2"
                >
                    <!-- Frame container (no lg:fixed so it stays centered in desktop) -->
                    <div class="lg:block">
                        <Frame>
                            <div class="relative w-full text-gray-600 dark:text-gray-300">
                                <ul class="flex flex-col gap-6 tracking-wide">
                                    {links.map((link) => (
                                        <li>
                                            <a
                                                href={link.to}
                                                class="px-2 py-1 hover:bg-gray-950/5 hover:text-gray-950
                                                       rounded-md block transition dark:hover:text-white
                                                       md:px-4 dark:hover:bg-white/5"
                                            >
                                                <span>{link.label}</span>
                                            </a>
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        </Frame>
                    </div>
                </div>

                <!-- Desktop Buttons (right) -->
                <div class="hidden lg:flex lg:justify-end lg:flex-shrink-0 z-50 relative">
					<div class="mr-4">
                        <ThemeSwitcher/>
                    </div>
                    <a href="/contact" class="px-4 py-2 bg-[#ffdd6d] text-black rounded-lg hover:bg-[#ebcb63] btn-primary">
                        Book an intro call
                    </a>
                </div>
            </div>
        </Container>
    </nav>
</header>

<!-- JavaScript for Mobile Menu -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const menuBtn = document.getElementById("menu-btn");
        const navLinks = document.getElementById("navlinks");
        const navLayer = document.getElementById("navLayer");
        const body = document.body;

        function toggleMenu() {
            // Toggle visibility
            navLinks?.classList.toggle("hidden");
            navLayer?.classList.toggle("scale-y-0");

            // If menu is now open (not hidden) and we're on mobile, disable body scroll
            const isOpen = !navLinks?.classList.contains("hidden");
            if (isOpen && window.innerWidth < 1024) {
                body.classList.add("overflow-hidden");
            } else {
                body.classList.remove("overflow-hidden");
            }
        }

        if (menuBtn && navLinks && navLayer) {
            // Open/Close via hamburger
            menuBtn.addEventListener("click", function (event) {
                event.stopPropagation();
                toggleMenu();
            });

            // Close menu when clicking the overlay
            navLayer.addEventListener("click", function () {
                if (!navLinks.classList.contains("hidden")) {
                    toggleMenu();
                }
            });

            // Close menu when clicking a link (mobile only)
            const anchorLinks = navLinks.querySelectorAll("a");
            anchorLinks.forEach((link) => {
                link.addEventListener("click", () => {
                    if (window.innerWidth < 1024) {
                        toggleMenu();
                    }
                });
            });

            // Handle window resize to reset menu state on desktop
            window.addEventListener("resize", () => {
                if (window.innerWidth >= 1024 && !navLinks.classList.contains("hidden")) {
                    toggleMenu();
                }
            });
        }
    });
</script>