---
import Container from "@components/misc/container.astro";
import Frame from "@components/misc/frame.astro";
import ThemeSwitcher from "./theme-switcher.astro";

const links = [
	{ to: "/", label: "rabia" },
	{ to: "/writings", label: "writings" },
	{ to: "/resources", label: "resources" },
	{ to: "/#testimonials", label: "testimonials" },
];
---

<header>
  <nav class="absolute w-full lg:bg-transparent dark:lg:bg-transparent">
    <Container>
      <div class="relative flex flex-wrap items-center justify-between gap-6 py-3 md:gap-0 md:py-4 lg:py-8">

        <!-- Logo + mobile controls -->
        <div class="relative z-40 flex w-full items-center justify-between lg:w-max lg:flex-shrink-0">
          <a href="/" class="relative z-50">
            <img src="/apple-icon.png" alt="Rabia Ahmed logo" loading="lazy"
                 decoding="async" class="h-14 w-14 object-cover" width="56" height="56" />
          </a>

          <!-- right-hand controls (mobile only) -->
          <div class="relative z-40 flex items-center gap-2 lg:hidden">
            <ThemeSwitcher />
            <button id="menu-btn" aria-label="Menu" class="p-6 -mr-2">
              <div class="m-auto h-0.5 w-5 rounded bg-sky-900 transition dark:bg-gray-300"></div>
              <div class="m-auto mt-2 h-0.5 w-5 rounded bg-sky-900 transition dark:bg-gray-300"></div>
            </button>
          </div>
        </div>

        <!-- centred desktop nav -->
        <div class="hidden lg:flex lg:fixed lg:inset-x-0 lg:justify-center z-30">
          <Frame>
            <ul class="flex gap-6 text-sm tracking-wide text-gray-600 dark:text-gray-300">
              {links.map(({ to, label }) => (
                <li>
                  <a href={to}
                     class="rounded-md px-2 py-1 md:px-4 transition
                            hover:bg-gray-950/5 hover:text-gray-950
                            dark:hover:bg-white/5 dark:hover:text-white">
                    {label}
                  </a>
                </li>
              ))}
            </ul>
          </Frame>
        </div>

        <!-- mobile overlay -->
        <div id="navLayer"
             class="fixed inset-0 z-30 h-screen w-screen origin-top scale-y-0
                    bg-white/70 dark:bg-theme-sun-text backdrop-blur-2xl
                    transition-transform duration-500 ease-in-out lg:hidden"></div>

        <!-- mobile links -->
        <div id="navlinks"
             class="hidden absolute top-16 left-1/2 z-40 mt-4 w-full -translate-x-1/2
                    flex-wrap items-center gap-6 rounded-md bg-white p-6 shadow-lg
                    dark:bg-theme-sun-secondary lg:hidden">
          <Frame>
            <ul class="flex flex-col gap-6 tracking-wide text-gray-600 dark:text-gray-300">
              {links.map(({ to, label }) => (
                <li>
                  <a href={to}
                     class="block rounded-md px-2 py-1 md:px-4 transition
                            hover:bg-gray-950/5 hover:text-gray-950
                            dark:hover:bg-white/5 dark:hover:text-white">
                    {label}
                  </a>
                </li>
              ))}
            </ul>
          </Frame>

          <!-- CTA (mobile) -->
          <div class="mt-4 w-full border-t border-gray-200 pt-4 dark:border-gray-700">
            <a href="/contact"
               class="block w-full rounded-lg bg-[#ffdd6d] px-4 py-2 text-center
                      text-black dark:text-theme-sun-text hover:bg-[#ebcb63]">
              Book an intro call
            </a>
          </div>
        </div>

        <!-- desktop right-side controls -->
        <div class="relative z-50 hidden lg:flex lg:flex-shrink-0 lg:justify-end">
          <div class="mr-4">
            <ThemeSwitcher />
          </div>
          <a href="/contact"
             class="rounded-lg bg-[#ffdd6d] px-4 py-2 text-black
                    hover:bg-[#ebcb63] btn-primary">
            Book an intro call
          </a>
        </div>
      </div>
    </Container>
  </nav>
</header>

<!-- mobile-menu logic -->
<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const menuBtn  = document.getElementById("menu-btn");
    const navLinks = document.getElementById("navlinks");
    const navLayer = document.getElementById("navLayer");
    const body     = document.body;

    const toggle = () => {
      navLinks.classList.toggle("hidden");
      navLayer.classList.toggle("scale-y-0");
      body.classList.toggle("overflow-hidden",
        !navLinks.classList.contains("hidden") && window.innerWidth < 1024);
    };

    menuBtn?.addEventListener("click", (e) => { e.stopPropagation(); toggle(); });
    navLayer?.addEventListener("click", () => { if (!navLinks.classList.contains("hidden")) toggle(); });
    navLinks?.querySelectorAll("a").forEach((a) =>
      a.addEventListener("click", () => { if (window.innerWidth < 1024) toggle(); })
    );
    window.addEventListener("resize", () => {
      if (window.innerWidth >= 1024 && !navLinks.classList.contains("hidden")) toggle();
    });
  });
</script>
